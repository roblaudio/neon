local pathfs = require("@lune_packages/pathfs")

local constants = require("../../constants")
local types = require("../../types")

-- TODO: slap on some buffer magic
local function LuauOutput(): types.Output
	local output = {} :: types.Output
	local contents = ""

	function output.pushLine(line: string): types.Output
		contents ..= "\n" .. line
		return output
	end

	function output.push(...: string): types.Output
		error("unfinished")
	end

	function output.pushHeader(scope: string): types.Output
		output.pushLine("--!native")
		output.pushLine("--!optimize 2")
		output.pushLine("--!nocheck")
		output.pushLine("--!nolint")
		output.pushLine(`-- {scope} generated by Neon v{constants.version} (https://github.com/roblaudio/neon)`)
		return output
	end

	function output.contents(): string
		return contents
	end

	function output.writeFile(path: pathfs.Path)
		local file = pathfs.File.new(path)

		-- ???
		if (file :: { isFile: (self: unknown) -> never }):isFile() then
			(file :: any):removeFile()
		end

		file:writeFile(contents)
	end

	return output
end

return LuauOutput
